/*! For license information please see components-ic-alert-ic-alert-stories-mdx.232ec908.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_ukic_web_components=self.webpackChunk_ukic_web_components||[]).push([[4754],{"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Xz:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Xz,dk:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.dk,h_:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_,oG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/components/ic-alert/ic-alert.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,customMessage:()=>customMessage,default:()=>ic_alert_stories,dismissible:()=>dismissible,dismissibleWithAction:()=>dismissibleWithAction,messageOnly:()=>messageOnly,responsiveTitle:()=>responsiveTitle,titleAbove:()=>titleAbove,variants:()=>variants,withAction:()=>withAction});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js");const readme_namespaceObject='# ic-alert\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute     | Description                                                                                   | Type                                                       | Default     |\n| ------------- | ------------- | --------------------------------------------------------------------------------------------- | ---------------------------------------------------------- | ----------- |\n| `announced`   | `announced`   | If `true`, the alert will have the \'alert\' ARIA role and will be announced to screen readers. | `boolean`                                                  | `true`      |\n| `dismissible` | `dismissible` | If `true`, the alert will have a close icon at the end to dismiss it.                         | `boolean`                                                  | `false`     |\n| `heading`     | `heading`     | The optional title to display at the start of the alert.                                      | `string`                                                   | `""`        |\n| `message`     | `message`     | The main body message of the alert.                                                           | `string`                                                   | `undefined` |\n| `titleAbove`  | `title-above` | If `true`, the title and message will appear above and below instead of inline.               | `boolean`                                                  | `false`     |\n| `variant`     | `variant`     | The variant of the alert which will be rendered.                                              | `"error" \\| "info" \\| "neutral" \\| "success" \\| "warning"` | `"neutral"` |\n\n\n## Events\n\n| Event       | Description                                                                                                             | Type                |\n| ----------- | ----------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| `dismiss`   | <span style="color:red">**[DEPRECATED]**</span> This event should not be used anymore. Use icDismiss instead.<br/><br/> | `CustomEvent<void>` |\n| `icDismiss` | Is emitted when the user dismisses the alert.                                                                           | `CustomEvent<void>` |\n\n\n## Slots\n\n| Slot        | Description                                    |\n| ----------- | ---------------------------------------------- |\n| `"action"`  | Content is placed to the right of the message. |\n| `"message"` | Content is placed to the right of the title.   |\n\n\n## Dependencies\n\n### Used by\n\n - [ic-dialog](../ic-dialog)\n\n### Depends on\n\n- [ic-typography](../ic-typography)\n- [ic-button](../ic-button)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-alert --\x3e ic-typography\n  ic-alert --\x3e ic-button\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-dialog --\x3e ic-alert\n  style ic-alert fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';__webpack_require__("./src/components/ic-link/readme.md"),__webpack_require__("./src/components/ic-button/readme.md");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h3:"h3"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Web Components/Alert",component:"ic-alert"}),"\n",(0,jsx_runtime.jsx)(dist.dk,{markdown:readme_namespaceObject}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"variants",children:"Variants"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Variants",children:lit_html.dy`<ic-alert
        heading="Neutral"
        message="This alert is for displaying miscellaneous messages"
      ></ic-alert>
      <ic-alert
        variant="info"
        heading="Info"
        message="This alert is for displaying information"
      ></ic-alert>
      <ic-alert
        variant="error"
        heading="Error"
        message="This alert is for displaying errors"
      ></ic-alert>
      <ic-alert
        variant="warning"
        heading="Warning"
        message="This alert is for displaying warnings"
      ></ic-alert>
      <ic-alert
        variant="success"
        heading="Success"
        message="This alert is for displaying success messages. It has a very long message with lots of text which goes over multiple
        lines so the alert should expand as well to make sure it doesn't overflow"
      ></ic-alert>`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"message-only",children:"Message only"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Message only",children:lit_html.dy`<ic-alert
      message="This alert is for displaying miscellaneous messages"
    ></ic-alert>`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"dismissible",children:"Dismissible"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Dismissible",children:lit_html.dy`<ic-alert
      heading="Neutral"
      message="This alert is for displaying miscellaneous messages"
      dismissible="true"
    ></ic-alert>`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"with-action",children:"With action"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"With action",children:lit_html.dy`<ic-alert
      heading="Neutral"
      message="This alert is for displaying miscellaneous messages"
      ><ic-button slot="action" variant="secondary">Button</ic-button></ic-alert
    >`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"dismissible-with-action",children:"Dismissible with action"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Dismissible with action",children:lit_html.dy`<ic-alert
      heading="Neutral"
      message="This alert is for displaying miscellaneous messages"
      dismissible="true"
      ><ic-button slot="action" variant="secondary">Button</ic-button></ic-alert
    >`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"title-above",children:"Title above"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Title above",children:lit_html.dy`<ic-alert
      heading="Neutral"
      message="This alert is for displaying miscellaneous messages"
      title-above="true"
    ></ic-alert>`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"responsive-title",children:"Responsive title"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Responsive title",children:lit_html.dy`<ic-alert
        heading="This title is very long so should force the alert to add 'title-above'"
        message="This alert does not have 'title-above' added as a prop but it is forced to add it due to the length of the title"
      ></ic-alert>
      <ic-alert
        variant="success"
        heading="Shorter title"
        message="Neither of these has 'title-above' set to true"
      ></ic-alert>`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"custom-message",children:"Custom message"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Custom message",children:lit_html.dy`<ic-alert heading="This alert uses a custom message slot">
      <ic-typography variant="body" slot="message">
        <p>
          This is some text and
          <ic-link href="/" inline>this is an inline link</ic-link> within the
          text.
        </p>
      </ic-typography>
    </ic-alert>`})})]})}const variants=()=>lit_html.dy`<ic-alert
        heading="Neutral"
        message="This alert is for displaying miscellaneous messages"
      ></ic-alert>
      <ic-alert
        variant="info"
        heading="Info"
        message="This alert is for displaying information"
      ></ic-alert>
      <ic-alert
        variant="error"
        heading="Error"
        message="This alert is for displaying errors"
      ></ic-alert>
      <ic-alert
        variant="warning"
        heading="Warning"
        message="This alert is for displaying warnings"
      ></ic-alert>
      <ic-alert
        variant="success"
        heading="Success"
        message="This alert is for displaying success messages. It has a very long message with lots of text which goes over multiple
        lines so the alert should expand as well to make sure it doesn't overflow"
      ></ic-alert>`;variants.storyName="Variants",variants.parameters={storySource:{source:'html`<ic-alert\n        heading="Neutral"\n        message="This alert is for displaying miscellaneous messages"\n      ></ic-alert>\n      <ic-alert\n        variant="info"\n        heading="Info"\n        message="This alert is for displaying information"\n      ></ic-alert>\n      <ic-alert\n        variant="error"\n        heading="Error"\n        message="This alert is for displaying errors"\n      ></ic-alert>\n      <ic-alert\n        variant="warning"\n        heading="Warning"\n        message="This alert is for displaying warnings"\n      ></ic-alert>\n      <ic-alert\n        variant="success"\n        heading="Success"\n        message="This alert is for displaying success messages. It has a very long message with lots of text which goes over multiple\n        lines so the alert should expand as well to make sure it doesn\'t overflow"\n      ></ic-alert>`'}};const messageOnly=()=>lit_html.dy`<ic-alert
      message="This alert is for displaying miscellaneous messages"
    ></ic-alert>`;messageOnly.storyName="Message only",messageOnly.parameters={storySource:{source:'html`<ic-alert\n      message="This alert is for displaying miscellaneous messages"\n    ></ic-alert>`'}};const dismissible=()=>lit_html.dy`<ic-alert
      heading="Neutral"
      message="This alert is for displaying miscellaneous messages"
      dismissible="true"
    ></ic-alert>`;dismissible.storyName="Dismissible",dismissible.parameters={storySource:{source:'html`<ic-alert\n      heading="Neutral"\n      message="This alert is for displaying miscellaneous messages"\n      dismissible="true"\n    ></ic-alert>`'}};const withAction=()=>lit_html.dy`<ic-alert
      heading="Neutral"
      message="This alert is for displaying miscellaneous messages"
      ><ic-button slot="action" variant="secondary">Button</ic-button></ic-alert
    >`;withAction.storyName="With action",withAction.parameters={storySource:{source:'html`<ic-alert\n      heading="Neutral"\n      message="This alert is for displaying miscellaneous messages"\n      ><ic-button slot="action" variant="secondary">Button</ic-button></ic-alert\n    >`'}};const dismissibleWithAction=()=>lit_html.dy`<ic-alert
      heading="Neutral"
      message="This alert is for displaying miscellaneous messages"
      dismissible="true"
      ><ic-button slot="action" variant="secondary">Button</ic-button></ic-alert
    >`;dismissibleWithAction.storyName="Dismissible with action",dismissibleWithAction.parameters={storySource:{source:'html`<ic-alert\n      heading="Neutral"\n      message="This alert is for displaying miscellaneous messages"\n      dismissible="true"\n      ><ic-button slot="action" variant="secondary">Button</ic-button></ic-alert\n    >`'}};const titleAbove=()=>lit_html.dy`<ic-alert
      heading="Neutral"
      message="This alert is for displaying miscellaneous messages"
      title-above="true"
    ></ic-alert>`;titleAbove.storyName="Title above",titleAbove.parameters={storySource:{source:'html`<ic-alert\n      heading="Neutral"\n      message="This alert is for displaying miscellaneous messages"\n      title-above="true"\n    ></ic-alert>`'}};const responsiveTitle=()=>lit_html.dy`<ic-alert
        heading="This title is very long so should force the alert to add 'title-above'"
        message="This alert does not have 'title-above' added as a prop but it is forced to add it due to the length of the title"
      ></ic-alert>
      <ic-alert
        variant="success"
        heading="Shorter title"
        message="Neither of these has 'title-above' set to true"
      ></ic-alert>`;responsiveTitle.storyName="Responsive title",responsiveTitle.parameters={storySource:{source:'html`<ic-alert\n        heading="This title is very long so should force the alert to add \'title-above\'"\n        message="This alert does not have \'title-above\' added as a prop but it is forced to add it due to the length of the title"\n      ></ic-alert>\n      <ic-alert\n        variant="success"\n        heading="Shorter title"\n        message="Neither of these has \'title-above\' set to true"\n      ></ic-alert>`'}};const customMessage=()=>lit_html.dy`<ic-alert heading="This alert uses a custom message slot">
      <ic-typography variant="body" slot="message">
        <p>
          This is some text and
          <ic-link href="/" inline>this is an inline link</ic-link> within the
          text.
        </p>
      </ic-typography>
    </ic-alert>`;customMessage.storyName="Custom message",customMessage.parameters={storySource:{source:'html`<ic-alert heading="This alert uses a custom message slot">\n      <ic-typography variant="body" slot="message">\n        <p>\n          This is some text and\n          <ic-link href="/" inline>this is an inline link</ic-link> within the\n          text.\n        </p>\n      </ic-typography>\n    </ic-alert>`'}};const componentMeta={title:"Web Components/Alert",tags:["stories-mdx"],includeStories:["variants","messageOnly","dismissible","withAction","dismissibleWithAction","titleAbove","responsiveTitle","customMessage"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ic_alert_stories=componentMeta,__namedExportsOrder=["variants","messageOnly","dismissible","withAction","dismissibleWithAction","titleAbove","responsiveTitle","customMessage"]},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/object-assign/index.js");var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./src/components/ic-button/readme.md":module=>{"use strict";module.exports='# ic-button\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                | Attribute                | Description                                                                                                                                                           | Type                                                                                                                                                                                     | Default     |\n| ----------------------- | ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `appearance`            | `appearance`             | The appearance of the button, e.g. dark, light, or the default.                                                                                                       | `"dark" \\| "default" \\| "light"`                                                                                                                                                         | `"default"` |\n| `disableTooltip`        | `disable-tooltip`        | If `true`, the ic-tooltip which is shown for icon variant will be disabled. Title or aria-label must be set if this prop is not applied.                              | `boolean`                                                                                                                                                                                | `false`     |\n| `disabled`              | `disabled`               | If `true`, the button will be in disabled state.                                                                                                                      | `boolean`                                                                                                                                                                                | `false`     |\n| `download`              | `download`               | If `true`, the user can save the linked URL instead of navigating to it.                                                                                              | `boolean \\| string`                                                                                                                                                                      | `false`     |\n| `form`                  | `form`                   | The <form> element to associate the button with.                                                                                                                      | `string`                                                                                                                                                                                 | `undefined` |\n| `formaction`            | `formaction`             | The URL that processes the information submitted by the button. It overrides the action attribute of the button\'s form owner. Does nothing if there is no form owner. | `string`                                                                                                                                                                                 | `undefined` |\n| `formenctype`           | `formenctype`            | The way the submitted form data is encoded.                                                                                                                           | `string`                                                                                                                                                                                 | `undefined` |\n| `formmethod`            | `formmethod`             | The HTTP method used to submit the form.                                                                                                                              | `string`                                                                                                                                                                                 | `undefined` |\n| `formnovalidate`        | `formnovalidate`         | If `true`, the form will not be validated when submitted.                                                                                                             | `boolean`                                                                                                                                                                                | `undefined` |\n| `formtarget`            | `formtarget`             | The place to display the response from submitting the form. It overrides the target attribute of the button\'s form owner.                                             | `string`                                                                                                                                                                                 | `undefined` |\n| `fullWidth`             | `full-width`             | If `true`, the button will fill the width of the container.                                                                                                           | `boolean`                                                                                                                                                                                | `false`     |\n| `href`                  | `href`                   | The URL that the link points to. This will render the button as an "a" tag.                                                                                           | `string`                                                                                                                                                                                 | `undefined` |\n| `hreflang`              | `hreflang`               | The human language of the linked URL.                                                                                                                                 | `string`                                                                                                                                                                                 | `undefined` |\n| `loading`               | `loading`                | If `true`, the button will be in loading state.                                                                                                                       | `boolean`                                                                                                                                                                                | `false`     |\n| `referrerpolicy`        | `referrerpolicy`         | How much of the referrer to send when following the link.                                                                                                             | `"" \\| "no-referrer" \\| "no-referrer-when-downgrade" \\| "origin" \\| "origin-when-cross-origin" \\| "same-origin" \\| "strict-origin" \\| "strict-origin-when-cross-origin" \\| "unsafe-url"` | `undefined` |\n| `rel`                   | `rel`                    | The relationship of the linked URL as space-separated link types.                                                                                                     | `string`                                                                                                                                                                                 | `undefined` |\n| `size`                  | `size`                   | The size of the button to be displayed.                                                                                                                               | `"default" \\| "large" \\| "small"`                                                                                                                                                        | `"default"` |\n| `target`                | `target`                 | The place to display the linked URL, as the name for a browsing context (a tab, window, or iframe).                                                                   | `string`                                                                                                                                                                                 | `undefined` |\n| `tooltipPlacement`      | `tooltip-placement`      | The position of the tooltip in relation to the button.                                                                                                                | `"bottom" \\| "left" \\| "right" \\| "top"`                                                                                                                                                 | `"bottom"`  |\n| `transparentBackground` | `transparent-background` | If `true`, the secondary variant of button will have a transparent background rather than white.                                                                      | `boolean`                                                                                                                                                                                | `true`      |\n| `type`                  | `type`                   | The type of the button.                                                                                                                                               | `"button" \\| "reset" \\| "submit"`                                                                                                                                                        | `"button"`  |\n| `variant`               | `variant`                | The variant of the button to be displayed.                                                                                                                            | `"destructive" \\| "icon" \\| "primary" \\| "secondary" \\| "tertiary"`                                                                                                                      | `"primary"` |\n\n\n## Events\n\n| Event     | Description                   | Type                |\n| --------- | ----------------------------- | ------------------- |\n| `icBlur`  | Emitted when button has blur  | `CustomEvent<void>` |\n| `icFocus` | Emitted when button has focus | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the native `button`.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot           | Description                                                                                 |\n| -------------- | ------------------------------------------------------------------------------------------- |\n| `"badge"`      | Badge component overlaying the top right of the button.                                     |\n| `"icon"`       | Deprecated. This slot should not be used anymore. Use left-icon or right-icon slot instead. |\n| `"left-icon"`  | Content will be placed to the left of the button label.                                     |\n| `"right-icon"` | Content will be placed to the right of the button label.                                    |\n\n\n## CSS Custom Properties\n\n| Name          | Description                  |\n| ------------- | ---------------------------- |\n| `--height`    | The height of the button.    |\n| `--min-width` | Minimum width of the button. |\n\n\n## Dependencies\n\n### Used by\n\n - [ic-accordion-group](../ic-accordion-group)\n - [ic-alert](../ic-alert)\n - [ic-card](../ic-card)\n - [ic-dialog](../ic-dialog)\n - [ic-horizontal-scroll](../ic-horizontal-scroll)\n - [ic-menu](../ic-menu)\n - [ic-menu-item](../ic-menu-item)\n - [ic-navigation-button](../ic-navigation-button)\n - [ic-navigation-menu](../ic-navigation-menu)\n - [ic-pagination](../ic-pagination)\n - [ic-search-bar](../ic-search-bar)\n - [ic-select](../ic-select)\n - [ic-side-navigation](../ic-side-navigation)\n - [ic-toast](../ic-toast)\n - [ic-top-navigation](../ic-top-navigation)\n\n### Depends on\n\n- [ic-loading-indicator](../ic-loading-indicator)\n- [ic-tooltip](../ic-tooltip)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-accordion-group --\x3e ic-button\n  ic-alert --\x3e ic-button\n  ic-card --\x3e ic-button\n  ic-dialog --\x3e ic-button\n  ic-horizontal-scroll --\x3e ic-button\n  ic-menu --\x3e ic-button\n  ic-menu-item --\x3e ic-button\n  ic-navigation-button --\x3e ic-button\n  ic-navigation-menu --\x3e ic-button\n  ic-pagination --\x3e ic-button\n  ic-search-bar --\x3e ic-button\n  ic-select --\x3e ic-button\n  ic-side-navigation --\x3e ic-button\n  ic-toast --\x3e ic-button\n  ic-top-navigation --\x3e ic-button\n  style ic-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n'},"./src/components/ic-link/readme.md":module=>{"use strict";module.exports='# ic-link\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property         | Attribute        | Description                                                                                                                                                                      | Type                                                                                                                                                                                     | Default     |\n| ---------------- | ---------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `appearance`     | `appearance`     | The appearance of the link, e.g. dark, light, or default.                                                                                                                        | `"dark" \\| "default" \\| "light"`                                                                                                                                                         | `"default"` |\n| `download`       | `download`       | If `true`, the user can save the linked URL instead of navigating to it.                                                                                                         | `boolean \\| string`                                                                                                                                                                      | `false`     |\n| `href`           | `href`           | The URL that the link points to.                                                                                                                                                 | `string`                                                                                                                                                                                 | `null`      |\n| `hreflang`       | `hreflang`       | The human language of the linked URL.                                                                                                                                            | `string`                                                                                                                                                                                 | `undefined` |\n| `referrerpolicy` | `referrerpolicy` | How much of the referrer to send when following the link.                                                                                                                        | `"" \\| "no-referrer" \\| "no-referrer-when-downgrade" \\| "origin" \\| "origin-when-cross-origin" \\| "same-origin" \\| "strict-origin" \\| "strict-origin-when-cross-origin" \\| "unsafe-url"` | `undefined` |\n| `rel`            | `rel`            | The relationship of the linked URL as space-separated link types.                                                                                                                | `string`                                                                                                                                                                                 | `undefined` |\n| `showIcon`       | `show-icon`      | <span style="color:red">**[DEPRECATED]**</span> This prop should not be used anymore. The \'open in new tab/window\' icon will display automatically if target="_blank".<br/><br/> | `boolean`                                                                                                                                                                                | `undefined` |\n| `target`         | `target`         | The place to display the linked URL, as the name for a browsing context (a tab, window, or iframe).                                                                              | `string`                                                                                                                                                                                 | `undefined` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the link.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot            | Description                                         |\n| --------------- | --------------------------------------------------- |\n| `"router-item"` | Handle routing by nesting your routes in this slot. |\n\n\n## Dependencies\n\n### Used by\n\n - [ic-breadcrumb](../ic-breadcrumb)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-breadcrumb --\x3e ic-link\n  style ic-link fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n'}}]);
//# sourceMappingURL=components-ic-alert-ic-alert-stories-mdx.232ec908.iframe.bundle.js.map