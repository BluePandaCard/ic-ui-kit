/*! For license information please see components-ic-switch-ic-switch-stories-mdx.cc1b9e11.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_ukic_web_components=self.webpackChunk_ukic_web_components||[]).push([[9232],{"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Xz:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Xz,dk:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.dk,h_:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_,oG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/components/ic-switch/ic-switch.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,ariaLabel:()=>ariaLabel,checked:()=>checked,default:()=>ic_switch_stories,defaultInForm:()=>defaultInForm,defaultStory:()=>defaultStory,deprecatedSmall:()=>deprecatedSmall,disabled:()=>disabled,disabledNameAndState:()=>disabledNameAndState,disabledNameStateAndChecked:()=>disabledNameStateAndChecked,helperText:()=>helperText,name:()=>ic_switch_stories_name,rightAdornment:()=>rightAdornment,small:()=>small,state:()=>state});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js");const readme_namespaceObject='# ic-switch\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property             | Attribute     | Description                                                                                                                                                                                                                                           | Type                   | Default        |\n| -------------------- | ------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------- | -------------- |\n| `checked`            | `checked`     | If `true`, the switch will display as checked.                                                                                                                                                                                                        | `boolean`              | `false`        |\n| `disabled`           | `disabled`    | If `true`, the disabled state will be set.                                                                                                                                                                                                            | `boolean`              | `false`        |\n| `helperText`         | `helper-text` | The helper text that will be displayed for additional field guidance.                                                                                                                                                                                 | `string`               | `""`           |\n| `hideLabel`          | `hide-label`  | If `true`, the label will be hidden and the required label value will be applied as an aria-label.                                                                                                                                                    | `boolean`              | `false`        |\n| `label` _(required)_ | `label`       | The aria-label applied to the switch when no visual \'name\' is provided.                                                                                                                                                                               | `string`               | `undefined`    |\n| `name`               | `name`        | The name of the control, which is submitted with the form data.                                                                                                                                                                                       | `string`               | `this.inputId` |\n| `showState`          | `show-state`  | If `true`, the switch will render the On/Off state text.                                                                                                                                                                                              | `boolean`              | `false`        |\n| `size`               | `size`        | The size of the switch component.                                                                                                                                                                                                                     | `"default" \\| "small"` | `"default"`    |\n| `small`              | `small`       | <span style="color:red">**[DEPRECATED]**</span> This prop should not be used anymore. Set prop `size` to "small" instead.<br/><br/>                                                                                                                   | `boolean`              | `false`        |\n| `value`              | `value`       | The value of the toggle does not mean if it\'s checked or not, use the `checked` property for that.  The value of a toggle is analogous to the value of a `<input type="checkbox">`, it\'s only used when the toggle participates in a native `<form>`. | `string`               | `"on"`         |\n\n\n## Events\n\n| Event      | Description                                  | Type                                     |\n| ---------- | -------------------------------------------- | ---------------------------------------- |\n| `icBlur`   | Emitted when the toggle loses focus.         | `CustomEvent<void>`                      |\n| `icChange` | Emitted when the value property has changed. | `CustomEvent<IcSwitchChangeEventDetail>` |\n| `icFocus`  | Emitted when the toggle has focus.           | `CustomEvent<void>`                      |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the switch.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot                | Description                                                  |\n| ------------------- | ------------------------------------------------------------ |\n| `"right-adornment"` | Content is placed to the right of switch before state label. |\n\n\n## Dependencies\n\n### Depends on\n\n- [ic-input-label](../ic-input-label)\n- [ic-typography](../ic-typography)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-switch --\x3e ic-input-label\n  ic-switch --\x3e ic-typography\n  ic-input-label --\x3e ic-typography\n  style ic-switch fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h3:"h3"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Web Components/Switch",component:"ic-switch"}),"\n",(0,jsx_runtime.jsx)(dist.dk,{markdown:readme_namespaceObject}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default",children:"Default"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Default",children:lit_html.dy` <ic-switch label="Label"></ic-switch> `})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"label",children:"Label"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Name",children:lit_html.dy` <ic-switch label="Label"></ic-switch> `})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"state",children:"State"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"State",children:lit_html.dy`<div style="display:flex; justify-content: center">
      <ic-switch show-state="true" label="Label"></ic-switch>
    </div>`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"checked",children:"Checked"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Checked",children:lit_html.dy`
      <ic-switch checked="true" label="Label" show-state="true"></ic-switch>
    `})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"small",children:"Small"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Small",children:lit_html.dy`
      <ic-switch size="small" show-state="true" label="Label"></ic-switch>
    `})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"deprecated---small",children:"Deprecated - small"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Deprecated - small",children:lit_html.dy` <ic-switch small show-state="true" label="Label"></ic-switch> `})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled",children:"Disabled"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Disabled",children:lit_html.dy` <ic-switch disabled="true" label="Label"></ic-switch> `})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled-name-and-state",children:"Disabled, name and state"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Disabled, name and state",children:lit_html.dy`
      <ic-switch disabled="true" show-state="true" label="Label"></ic-switch>
    `})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled-name-state-and-checked",children:"Disabled, name, state and checked"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Disabled, name, state and checked",children:lit_html.dy`
      <ic-switch
        disabled="true"
        show-state="true"
        label="Label"
        checked="true"
      ></ic-switch>
    `})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"hidden-label",children:"Hidden label"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"ARIA label",children:lit_html.dy` <ic-switch label="Custom label" hide-label="true"></ic-switch> `})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"helper-text",children:"Helper text"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Helper text",children:lit_html.dy` <ic-switch label="Label" helper-text="Helper Text"></ic-switch>`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"right-adornment",children:"Right adornment"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Right adornment",children:lit_html.dy` <ic-switch label="Right adornment">
      <svg
        slot="right-adornment"
        width="16"
        height="16"
        viewBox="0 0 16 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M8 8C10.21 8 12 6.21 12 4C12 1.79 10.21 0 8 0C5.79 0 4 1.79 4 4C4 6.21 5.79 8 8 8ZM8 10C5.33 10 0 11.34 0 14V16H16V14C16 11.34 10.67 10 8 10Z"
        />
      </svg>
    </ic-switch>`})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default-in-form",children:"Default in form"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"Default in form",children:lit_html.dy` <form id="form" aria-label="test form">
      <ic-switch id="switch" label="custom label" hide-label="true"></ic-switch>
      <br />
      <br />
      <input type="submit" value="Submit" />
      <input type="reset" value="Reset" />
      <form>
        <script>
          const tcForm = document.getElementById("form");
          tcForm.addEventListener("submit", handleSubmit);
          function handleSubmit(e) {
            e.preventDefault();
            var data = "HTML Form Data (name: value): \\n";
            for (const element of document.getElementById("form").elements) {
              data += element.name + ": " + element.value + "\\n";
            }
            alert(data);
          }
        </script>
      </form>
    </form>`})})]})}const defaultStory=()=>lit_html.dy` <ic-switch label="Label"></ic-switch> `;defaultStory.storyName="Default",defaultStory.parameters={storySource:{source:'html` <ic-switch label="Label"></ic-switch> `'}};const ic_switch_stories_name=()=>lit_html.dy` <ic-switch label="Label"></ic-switch> `;ic_switch_stories_name.storyName="Name",ic_switch_stories_name.parameters={storySource:{source:'html` <ic-switch label="Label"></ic-switch> `'}};const state=()=>lit_html.dy`<div style="display:flex; justify-content: center">
      <ic-switch show-state="true" label="Label"></ic-switch>
    </div>`;state.storyName="State",state.parameters={storySource:{source:'html`<div style="display:flex; justify-content: center">\n      <ic-switch show-state="true" label="Label"></ic-switch>\n    </div>`'}};const checked=()=>lit_html.dy`
      <ic-switch checked="true" label="Label" show-state="true"></ic-switch>
    `;checked.storyName="Checked",checked.parameters={storySource:{source:'html`\n      <ic-switch checked="true" label="Label" show-state="true"></ic-switch>\n    `'}};const small=()=>lit_html.dy`
      <ic-switch size="small" show-state="true" label="Label"></ic-switch>
    `;small.storyName="Small",small.parameters={storySource:{source:'html`\n      <ic-switch size="small" show-state="true" label="Label"></ic-switch>\n    `'}};const deprecatedSmall=()=>lit_html.dy` <ic-switch small show-state="true" label="Label"></ic-switch> `;deprecatedSmall.storyName="Deprecated - small",deprecatedSmall.parameters={storySource:{source:'html` <ic-switch small show-state="true" label="Label"></ic-switch> `'}};const disabled=()=>lit_html.dy` <ic-switch disabled="true" label="Label"></ic-switch> `;disabled.storyName="Disabled",disabled.parameters={storySource:{source:'html` <ic-switch disabled="true" label="Label"></ic-switch> `'}};const disabledNameAndState=()=>lit_html.dy`
      <ic-switch disabled="true" show-state="true" label="Label"></ic-switch>
    `;disabledNameAndState.storyName="Disabled, name and state",disabledNameAndState.parameters={storySource:{source:'html`\n      <ic-switch disabled="true" show-state="true" label="Label"></ic-switch>\n    `'}};const disabledNameStateAndChecked=()=>lit_html.dy`
      <ic-switch
        disabled="true"
        show-state="true"
        label="Label"
        checked="true"
      ></ic-switch>
    `;disabledNameStateAndChecked.storyName="Disabled, name, state and checked",disabledNameStateAndChecked.parameters={storySource:{source:'html`\n      <ic-switch\n        disabled="true"\n        show-state="true"\n        label="Label"\n        checked="true"\n      ></ic-switch>\n    `'}};const ariaLabel=()=>lit_html.dy` <ic-switch label="Custom label" hide-label="true"></ic-switch> `;ariaLabel.storyName="ARIA label",ariaLabel.parameters={storySource:{source:'html` <ic-switch label="Custom label" hide-label="true"></ic-switch> `'}};const helperText=()=>lit_html.dy` <ic-switch label="Label" helper-text="Helper Text"></ic-switch>`;helperText.storyName="Helper text",helperText.parameters={storySource:{source:'html` <ic-switch label="Label" helper-text="Helper Text"></ic-switch>`'}};const rightAdornment=()=>lit_html.dy` <ic-switch label="Right adornment">
      <svg
        slot="right-adornment"
        width="16"
        height="16"
        viewBox="0 0 16 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M8 8C10.21 8 12 6.21 12 4C12 1.79 10.21 0 8 0C5.79 0 4 1.79 4 4C4 6.21 5.79 8 8 8ZM8 10C5.33 10 0 11.34 0 14V16H16V14C16 11.34 10.67 10 8 10Z"
        />
      </svg>
    </ic-switch>`;rightAdornment.storyName="Right adornment",rightAdornment.parameters={storySource:{source:'html` <ic-switch label="Right adornment">\n      <svg\n        slot="right-adornment"\n        width="16"\n        height="16"\n        viewBox="0 0 16 16"\n        fill="none"\n        xmlns="http://www.w3.org/2000/svg"\n      >\n        <path\n          d="M8 8C10.21 8 12 6.21 12 4C12 1.79 10.21 0 8 0C5.79 0 4 1.79 4 4C4 6.21 5.79 8 8 8ZM8 10C5.33 10 0 11.34 0 14V16H16V14C16 11.34 10.67 10 8 10Z"\n        />\n      </svg>\n    </ic-switch>`'}};const defaultInForm=()=>lit_html.dy` <form id="form" aria-label="test form">
      <ic-switch id="switch" label="custom label" hide-label="true"></ic-switch>
      <br />
      <br />
      <input type="submit" value="Submit" />
      <input type="reset" value="Reset" />
      <form>
        <script>
          const tcForm = document.getElementById("form");
          tcForm.addEventListener("submit", handleSubmit);
          function handleSubmit(e) {
            e.preventDefault();
            var data = "HTML Form Data (name: value): \\n";
            for (const element of document.getElementById("form").elements) {
              data += element.name + ": " + element.value + "\\n";
            }
            alert(data);
          }
        </script>
      </form>
    </form>`;defaultInForm.storyName="Default in form",defaultInForm.parameters={storySource:{source:'html` <form id="form" aria-label="test form">\n      <ic-switch id="switch" label="custom label" hide-label="true"></ic-switch>\n      <br />\n      <br />\n      <input type="submit" value="Submit" />\n      <input type="reset" value="Reset" />\n      <form>\n        <script>\n          const tcForm = document.getElementById("form");\n          tcForm.addEventListener("submit", handleSubmit);\n          function handleSubmit(e) {\n            e.preventDefault();\n            var data = "HTML Form Data (name: value): \\\\n";\n            for (const element of document.getElementById("form").elements) {\n              data += element.name + ": " + element.value + "\\\\n";\n            }\n            alert(data);\n          }\n        <\/script>\n      </form>\n    </form>`'}};const componentMeta={title:"Web Components/Switch",tags:["stories-mdx"],includeStories:["defaultStory","name","state","checked","small","deprecatedSmall","disabled","disabledNameAndState","disabledNameStateAndChecked","ariaLabel","helperText","rightAdornment","defaultInForm"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ic_switch_stories=componentMeta,__namedExportsOrder=["defaultStory","name","state","checked","small","deprecatedSmall","disabled","disabledNameAndState","disabledNameStateAndChecked","ariaLabel","helperText","rightAdornment","defaultInForm"]},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/object-assign/index.js");var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);
//# sourceMappingURL=components-ic-switch-ic-switch-stories-mdx.cc1b9e11.iframe.bundle.js.map